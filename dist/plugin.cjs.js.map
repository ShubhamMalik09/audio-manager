{"version":3,"file":"plugin.cjs.js","sources":["esm/web.js","esm/index.js"],"sourcesContent":["// import { WebPlugin } from '@capacitor/core';\r\n// import type { AudioManagerPlugin } from './definitions';\r\n// export class AudioManagerWeb extends WebPlugin implements AudioManagerPlugin {\r\n//   async echo(options: { value: string }): Promise<{ value: string }> {\r\n//     console.log('ECHO', options);\r\n//     return options;\r\n//   }\r\n// }\r\nimport { WebPlugin } from '@capacitor/core';\r\nexport class AudioManagerWeb extends WebPlugin {\r\n    async listAudioOutputs() {\r\n        console.warn('[AudioManager] listAudioOutputs is not supported on web.');\r\n        return {\r\n            devices: [\r\n                { id: 0, type: 0, productName: 'Default Web Audio Output', typeName: 'Default Web Audio Output' },\r\n            ],\r\n        };\r\n    }\r\n    async switchToSpeaker() {\r\n        console.warn('[AudioManager] switchToSpeaker is not supported on web.');\r\n    }\r\n    async switchToEarpiece() {\r\n        console.warn('[AudioManager] switchToEarpiece is not supported on web.');\r\n    }\r\n    async startCall() {\r\n        console.warn('[AudioManager] startCall is not supported on web.');\r\n    }\r\n    async endCall() {\r\n        console.warn('[AudioManager] endCall is not supported on web.');\r\n    }\r\n    async switchCommunicationDevice(_) {\r\n        console.warn('[AudioManager] switchCommunicationDevice is not supported on web.');\r\n    }\r\n    async muteMicrophone() {\r\n        console.warn('[AudioManager] muteMicrophone is not supported on web.');\r\n    }\r\n    async unmuteMicrophone() {\r\n        console.warn('[AudioManager] unmuteMicrophone is not supported on web.');\r\n    }\r\n    async getMicrophoneStatus() {\r\n        console.warn('[AudioManager] getMicrophoneStatus is not supported on web.');\r\n        return {\r\n            isMicMute: false,\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=web.js.map","import { registerPlugin } from '@capacitor/core';\r\nimport { AudioManagerWeb } from './web';\r\n// const AudioManager = registerPlugin<AudioManagerPlugin>('AudioManager', {\r\n//   web: () => import('./web').then((m) => new m.AudioManagerWeb()),\r\n// });\r\nexport const AudioOutput = registerPlugin('AudioOutput', {\r\n    web: () => new AudioManagerWeb()\r\n});\r\nexport * from './definitions';\r\n// export { AudioManager };\r\n//# sourceMappingURL=index.js.map"],"names":["WebPlugin","registerPlugin"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEO,MAAM,eAAe,SAASA,cAAS,CAAC;AAC/C,IAAI,MAAM,gBAAgB,GAAG;AAC7B,QAAQ,OAAO,CAAC,IAAI,CAAC,0DAA0D,CAAC,CAAC;AACjF,QAAQ,OAAO;AACf,YAAY,OAAO,EAAE;AACrB,gBAAgB,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,WAAW,EAAE,0BAA0B,EAAE,QAAQ,EAAE,0BAA0B,EAAE;AACjH,aAAa;AACb,SAAS,CAAC;AACV,KAAK;AACL,IAAI,MAAM,eAAe,GAAG;AAC5B,QAAQ,OAAO,CAAC,IAAI,CAAC,yDAAyD,CAAC,CAAC;AAChF,KAAK;AACL,IAAI,MAAM,gBAAgB,GAAG;AAC7B,QAAQ,OAAO,CAAC,IAAI,CAAC,0DAA0D,CAAC,CAAC;AACjF,KAAK;AACL,IAAI,MAAM,SAAS,GAAG;AACtB,QAAQ,OAAO,CAAC,IAAI,CAAC,mDAAmD,CAAC,CAAC;AAC1E,KAAK;AACL,IAAI,MAAM,OAAO,GAAG;AACpB,QAAQ,OAAO,CAAC,IAAI,CAAC,iDAAiD,CAAC,CAAC;AACxE,KAAK;AACL,IAAI,MAAM,yBAAyB,CAAC,CAAC,EAAE;AACvC,QAAQ,OAAO,CAAC,IAAI,CAAC,mEAAmE,CAAC,CAAC;AAC1F,KAAK;AACL,IAAI,MAAM,cAAc,GAAG;AAC3B,QAAQ,OAAO,CAAC,IAAI,CAAC,wDAAwD,CAAC,CAAC;AAC/E,KAAK;AACL,IAAI,MAAM,gBAAgB,GAAG;AAC7B,QAAQ,OAAO,CAAC,IAAI,CAAC,0DAA0D,CAAC,CAAC;AACjF,KAAK;AACL,IAAI,MAAM,mBAAmB,GAAG;AAChC,QAAQ,OAAO,CAAC,IAAI,CAAC,6DAA6D,CAAC,CAAC;AACpF,QAAQ,OAAO;AACf,YAAY,SAAS,EAAE,KAAK;AAC5B,SAAS,CAAC;AACV,KAAK;AACL;;AC3CA;AACA;AACA;AACY,MAAC,WAAW,GAAGC,mBAAc,CAAC,aAAa,EAAE;AACzD,IAAI,GAAG,EAAE,MAAM,IAAI,eAAe,EAAE;AACpC,CAAC,EAAE;AAEH;;;;"}